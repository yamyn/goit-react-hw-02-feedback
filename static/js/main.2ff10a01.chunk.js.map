{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/App/App.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Statistics/StatOption.js","components/Statistics/Statistics.js","components/FeedbackOptions/Feedbackcontrol.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","StatOption","option","value","Statistics","options","statistics","className","list","map","key","Feedbackcontrol","onAddFeedback","type","onClick","name","FeedbackOptions","item","Section","title","children","titleSection","Notification","message","App","state","good","neutral","bad","Object","keys","countTotalFeedback","reduce","acc","countPositiveFeedbackPercentage","Math","round","addFeedback","e","currentTarget","setState","this","total","statOpt","styles","container","Component","ReactDOM","render","document","querySelector"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,gC,qBCAzBD,EAAOC,QAAU,CAAC,UAAY,yB,gBCA9BD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,aAAe,gC,kLCelBC,EAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAX,OACf,oCACI,2BACKD,EADL,KACeC,KCkBRC,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,WAAZ,OACf,wBAAIC,UAAWC,QACVH,EAAQI,KAAI,SAAAP,GAAM,OACf,wBAAIQ,IAAKR,GACL,kBAAC,EAAD,CAAYA,OAAQA,EAAQC,MAAOG,EAAWJ,W,OCM/CS,EAbS,SAAC,GAAD,IAAGT,EAAH,EAAGA,OAAQU,EAAX,EAAWA,cAAX,OACpB,oCACI,4BAAQC,KAAK,SAASC,QAASF,EAAeG,KAAMb,GAC/CA,KCmBEc,EAnBS,SAAC,GAAD,IAAGX,EAAH,EAAGA,QAASO,EAAZ,EAAYA,cAAZ,OACpB,wBAAIL,UAAWC,QACVH,EAAQI,KAAI,SAAAP,GAAM,OACf,wBAAIQ,IAAKR,EAAQK,UAAWU,QACxB,kBAAC,EAAD,CACIf,OAAQA,EACRU,cAAeA,U,QCMpBM,EAbC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,6BAASb,UAAWc,gBAChB,4BAAKF,GACJC,ICCME,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,EAAJ,MCMjBC,E,4MACjBC,MAAQ,CAAEC,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCvB,QAAUwB,OAAOC,KAAK,EAAKL,O,EAE3BM,mBAAqB,kBACjB,EAAK1B,QAAQ2B,QAAO,SAACC,EAAK/B,GAAN,OAAiB,EAAKuB,MAAMvB,GAAU+B,IAAK,I,EAEnEC,gCAAkC,2BAC3BC,KAAKC,MAAO,EAAKX,MAAMC,KAAO,EAAKK,qBAAwB,KADhC,M,EAGlCM,YAAc,SAAAC,GACV,IAAMpC,EAASoC,EAAEC,cAAcxB,KAE/B,EAAKyB,UAAS,SAAAf,GAAK,sBACdvB,EAASuB,EAAMvB,GAAU,O,uDAI9B,IAAMI,EAAU,eACTmC,KAAKhB,MADI,CAEZiB,MAAOD,KAAKV,qBACZ,oBAAqBU,KAAKP,oCAExBS,EAAUd,OAAOC,KAAKxB,GAC5B,OACI,oCACI,yBAAKC,UAAWqC,IAAOC,WACnB,yDACA,kBAAC,EAAD,CAAS1B,MAAM,yBACX,kBAAC,EAAD,CACId,QAASoC,KAAKpC,QACdO,cAAe6B,KAAKJ,eAG5B,kBAAC,EAAD,CAASlB,MAAM,cACW,IAArBb,EAAWoC,MACR,kBAAC,EAAD,CACIrC,QAASsC,EACTrC,WAAYA,IAGhB,kBAAC,EAAD,CAAciB,QAAQ,6B,GA1CjBuB,aCLjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.2ff10a01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2lRUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleSection\":\"Section_titleSection__3sOBD\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StatOption = ({ option, value }) => (\n    <>\n        <p>\n            {option}: {value}\n        </p>\n    </>\n);\n\nStatOption.propTypes = {\n    option: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default StatOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { list } from './Statistics.module.css';\nimport StatOption from './StatOption';\n\nconst Statistics = ({ options, statistics }) => (\n    <ul className={list}>\n        {options.map(option => (\n            <li key={option}>\n                <StatOption option={option} value={statistics[option]} />\n            </li>\n        ))}\n    </ul>\n);\n\nStatistics.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n    statistics: PropTypes.objectOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    ),\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Feedbackcontrol = ({ option, onAddFeedback }) => (\n    <>\n        <button type=\"button\" onClick={onAddFeedback} name={option}>\n            {option}\n        </button>\n    </>\n);\n\nFeedbackcontrol.propTypes = {\n    option: PropTypes.string.isRequired,\n    onAddFeedback: PropTypes.func.isRequired,\n};\n\nexport default Feedbackcontrol;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { list, item } from './FeedbackOptions.module.css';\nimport Feedbackcontrol from './Feedbackcontrol';\n\nconst FeedbackOptions = ({ options, onAddFeedback }) => (\n    <ul className={list}>\n        {options.map(option => (\n            <li key={option} className={item}>\n                <Feedbackcontrol\n                    option={option}\n                    onAddFeedback={onAddFeedback}\n                />\n            </li>\n        ))}\n    </ul>\n);\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n    onAddFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { titleSection } from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n    <section className={titleSection}>\n        <h2>{title}</h2>\n        {children}\n    </section>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}!</p>;\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\n\nimport styles from './App.module.css';\n\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Section from '../Section/Section';\nimport Notification from '../Notification/Notification';\n\nexport default class App extends Component {\n    state = { good: 0, neutral: 0, bad: 0 };\n\n    options = Object.keys(this.state);\n\n    countTotalFeedback = () =>\n        this.options.reduce((acc, option) => this.state[option] + acc, 0);\n\n    countPositiveFeedbackPercentage = () =>\n        `${Math.round((this.state.good / this.countTotalFeedback()) * 100)}%`;\n\n    addFeedback = e => {\n        const option = e.currentTarget.name;\n\n        this.setState(state => ({\n            [option]: state[option] + 1,\n        }));\n    };\n    render() {\n        const statistics = {\n            ...this.state,\n            total: this.countTotalFeedback(),\n            'positive feedback': this.countPositiveFeedbackPercentage(),\n        };\n        const statOpt = Object.keys(statistics);\n        return (\n            <>\n                <div className={styles.container}>\n                    <h1>goit-react-hw-02-feedback</h1>\n                    <Section title=\"Please leave feedback\">\n                        <FeedbackOptions\n                            options={this.options}\n                            onAddFeedback={this.addFeedback}\n                        />\n                    </Section>\n                    <Section title=\"Statistics\">\n                        {statistics.total !== 0 ? (\n                            <Statistics\n                                options={statOpt}\n                                statistics={statistics}\n                            />\n                        ) : (\n                            <Notification message=\"No feedback given\" />\n                        )}\n                    </Section>\n                </div>\n            </>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}